name: CI of DataDrivenMPC

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'

jobs:

  clang-format:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Install clang-format-10
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install clang-format-10
      - name: Run clang-format-check
        run: |
          ./.clang-format-check.sh

  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
        build-type: [Debug, RelWithDebInfo]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set ROS version
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]
          then
            echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
            echo "PYTHON_PACKAGE_PREFIX=python3" >> $GITHUB_ENV
          else
            echo "ROS_DISTRO=melodic" >> $GITHUB_ENV
            echo "PYTHON_PACKAGE_PREFIX=python" >> $GITHUB_ENV
          fi
      - name: Install Python dependencies # Only for tests
        run: |
          set -e
          set -x
          sudo apt-get update -qq
          sudo apt install ${PYTHON_PACKAGE_PREFIX}-tk
          python -m pip install --upgrade pip
          # Due to numpy conflicts, it must be run before apt numpy is installed.
          pip install numpy pybullet matplotlib
      - name: Install ROS
        run: |
          set -e
          set -x
          sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
          wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
          sudo apt-get update -qq
          sudo apt-get install -qq ros-${ROS_DISTRO}-ros-base ${PYTHON_PACKAGE_PREFIX}-catkin-tools ${PYTHON_PACKAGE_PREFIX}-rosdep doxygen graphviz
      - name: Setup catkin workspace
        run: |
          set -e
          set -x
          mkdir -p ${GITHUB_WORKSPACE}/catkin_ws/src/
          cd ${GITHUB_WORKSPACE}/catkin_ws
          set +x
          . /opt/ros/${ROS_DISTRO}/setup.bash
          set -x
          catkin init
          catkin build --limit-status-rate 0.1
      - name: Checkout repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: catkin_ws/src/DataDrivenMPC
      - name: Checkout NMPC
        uses: actions/checkout@v2
        with:
          repository: isri-aist/NMPC
          submodules: recursive
          path: catkin_ws/src/NMPC
      - name: Download libtorch
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}
          wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.11.0%2Bcpu.zip
          unzip libtorch-cxx11-abi-shared-with-deps-1.11.0+cpu.zip
      - name: Rosdep install
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/catkin_ws
          set +x
          . devel/setup.bash
          set -x
          sudo rosdep init
          rosdep update
          rosdep install -y -r --from-paths src --ignore-src
      - name: Catkin build
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/catkin_ws
          set +x
          . devel/setup.bash
          set -x
          catkin build --limit-status-rate 0.1 -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DINSTALL_DOCUMENTATION=ON \
          -DLIBTORCH_PATH=${GITHUB_WORKSPACE}/libtorch
      - name: Run tests
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/catkin_ws
          set +x
          . devel/setup.bash
          set -x
          catkin build --limit-status-rate 0.1 --catkin-make-args run_tests -- data_driven_mpc --no-deps
          catkin_test_results --verbose --all build
      - name: Upload documentation
        # Only run for one configuration and on origin master branch
        if: matrix.os == 'ubuntu-20.04' && matrix.build-type == 'RelWithDebInfo' && github.repository_owner == 'isri-aist' && github.ref == 'refs/heads/master'
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/catkin_ws/src/DataDrivenMPC
          git config --global user.name "Masaki Murooka"
          git config --global user.email "m-murooka@aist.go.jp"
          git remote set-url origin "https://mmurooka:${{ secrets.CI_TOKEN }}@github.com/isri-aist/DataDrivenMPC"
          git fetch --depth=1 origin gh-pages:gh-pages
          git clean -dfx
          git checkout --quiet gh-pages
          rm -rf doxygen/
          cp -r ${GITHUB_WORKSPACE}/catkin_ws/build/data_driven_mpc/doc/html/ doxygen
          git add doxygen
          git_status=`git status -s`
          if test -n "$git_status"; then
            git commit --quiet -m "Update Doxygen HTML files from commit ${{ github.sha }}"
            git push origin gh-pages
          else
            echo "Github pages documentation is already up-to-date."
          fi
